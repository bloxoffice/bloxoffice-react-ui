import {
  CREATECAMPAIGNREQUESTED,
  PREVIEWCAMPAIGN,
  GETALLCAMPAIGNSREQUESTED,
  GETALLCAMPAIGNSRECEIVED,
  CREATECAMPAIGNSUCCESS,
  GETALLCAMPAIGNSFAILED
} from 'containers/Campaigns/Campaigns.constants';

import { GETCAMPAIGNSUCCESS } from 'containers/Preview/Preview.constants';
import {
  SIGNUPREQUEST,
  SIGNUPSUCCESS,
  SIGNUPFAIL,
  ALLCITIESRECEIVED,
  SIGNUPNPOREQUEST,
  SIGNUPNPOSUCCESS,
  SIGNUPNPOFAIL,
  FILEUPLOADREQUEST,
  FILEUPLOADSUCCESS,
  FILEUPLOADFAIL,
  GETGEOSTART,
  SIGNINFORNPOREQUEST,
  SIGNINFORNPOREQUESTSUCCESS,
  SIGNINFORNPOREQUESTFAIL,
  GETTOKENDETAILSREQUEST,
  GETTOKENDETAILSREQUESTSUCCESS
} from 'containers/Register/Register.constants';
import { SIGNINREQUEST, SIGNINSUCCESS, SIGNINFAIL } from '../containers/Login/Login.constants';
import { FPREQUEST, FPSUCCESS, FPFAIL } from 'containers/ForgotPassword/ForgotPassword.constants';
import { RPREQUEST, RPSUCCESS, RPFAIL } from 'containers/ResetPassword/ResetPassword.constants';
import { DONATIONREQUEST, DONATIONSUCCESS, DONATIONFAIL } from '../containers/Donate/Donate.constants';

export const LoadingReducer = (state = false, action) => {
  switch (action.type) {
  case CREATECAMPAIGNREQUESTED:
  case GETALLCAMPAIGNSREQUESTED:
  case SIGNUPREQUEST:
  case SIGNINREQUEST:
  case FPREQUEST:
  case RPREQUEST:
  case DONATIONREQUEST:
  case SIGNUPNPOREQUEST:
  case FILEUPLOADREQUEST:
  case GETGEOSTART:
  case SIGNINFORNPOREQUEST:
  case GETTOKENDETAILSREQUEST:
    return true;
  case PREVIEWCAMPAIGN:
  case GETALLCAMPAIGNSRECEIVED:
  case GETCAMPAIGNSUCCESS:
  case CREATECAMPAIGNSUCCESS:
  case SIGNUPSUCCESS:
  case SIGNUPFAIL:
  case SIGNINSUCCESS:
  case SIGNINFAIL:
  case FPFAIL:
  case FPSUCCESS:
  case RPSUCCESS:
  case RPFAIL:
  case GETALLCAMPAIGNSFAILED:
  case DONATIONSUCCESS:
  case DONATIONFAIL:
  case ALLCITIESRECEIVED:
  case SIGNUPNPOSUCCESS:
  case SIGNUPNPOFAIL:
  case FILEUPLOADSUCCESS:
  case FILEUPLOADFAIL:
  case SIGNINFORNPOREQUESTSUCCESS:
  case SIGNINFORNPOREQUESTFAIL:
  case GETTOKENDETAILSREQUESTSUCCESS:
    return false;
  default:
    return false;
  }
};
